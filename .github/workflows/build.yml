name: Build and Publish
on:
  push:
  pull_request:

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet: [3.1.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Test
        run: dotnet test -c Release --verbosity normal

  apidoc:
    name: Publish API Documentation
    runs-on: ubuntu-latest

    # Runs only on commits to master
    if: github.ref == 'refs/heads/master'
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build API documentation
        uses: nikeee/docfx-action@master
        with:
          args: docs/docfx.json

      - name: Deploy to GitHub pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/_site
          TARGET_FOLDER: apidoc
          CLEAN: true

  nuget:
    name: Publish NuGet Packages
    runs-on: ubuntu-latest

    # Runs only on commits to master or when creating a tag
    if: github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tags/')
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Create Packages
        if: github.ref == 'refs/heads/master'
        run: |
          BUILD_NUMBER=$(git rev-parse --short HEAD)
          dotnet pack src/MarcusW.VncClient -c Release -o packages -p:BuildNumber=$BUILD_NUMBER
          dotnet pack src/MarcusW.VncClient.Avalonia -c Release -o packages -p:BuildNumber=$BUILD_NUMBER

      - name: Create Release-Packages
        if: contains(github.ref, 'refs/tags/')
        run: |
          dotnet pack src/MarcusW.VncClient -c Release -o packages
          dotnet pack src/MarcusW.VncClient.Avalonia -c Release -o packages

      - name: Push to GitHub Packages
        run: dotnet nuget push "packages/*.nupkg" -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -k ${{ secrets.GITHUB_TOKEN }} --skip-duplicate

      - name: Push to nuget.org
        if: contains(github.ref, 'refs/tags/')
        run: dotnet nuget push "packages/*.nupkg" -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: packages/
